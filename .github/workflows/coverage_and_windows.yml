name: SonarCloud Analysis (Windows)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  sonarcloud_analysis:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install SonarScanner
      - name: Install SonarScanner
        if: runner.os == 'Windows'
        run: |
          # Download SonarScanner for Windows
          Invoke-WebRequest -Uri "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.0.2311-windows.zip" -OutFile "sonar-scanner.zip"
          
          # Extract SonarScanner
          Expand-Archive -Path "sonar-scanner.zip" -DestinationPath "sonar-scanner"
          
          # Add sonar-scanner\bin directory to PATH
          $env:PATH += ";$(pwd)/sonar-scanner/bin"

          # Verify SonarScanner installation
          sonar-scanner --version

      # Run tests and generate coverage report
      - name: Run tests and generate coverage report
        run: |
          cd proximity_client  # Change directory to proximity_client
          flutter test --coverage test/

      # Clean coverage report (if needed)
      # Note: SonarCloud typically analyzes code without needing to clean coverage reports
      # - name: Clean coverage report
      #   run: |
      #     cd proximity_client
      #     lcov --remove coverage/lcov.info '*/test/*' -o coverage/lcov.cleaned.info

      # Analyze code with SonarCloud
      - name: Analyze code with SonarCloud
        run: |
          sonar-scanner \
            -Dsonar.projectKey=<Your_Project_Key> \
            -Dsonar.organization=<Your_Organization_Key> \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONARCLOUD_TOKEN }}

      # Note: Replace <Your_Project_Key>, <Your_Organization_Key> and ${{ secrets.SONARCLOUD_TOKEN }} with actual values

