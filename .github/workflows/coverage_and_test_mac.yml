name: Coverage And Test (macOS)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage_flutter_test:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'  # Specify your Flutter version here

      # Get dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Install lcov (for macOS)
      - name: Install lcov
        run: |
          brew install lcov

      # Run tests and generate coverage report
      - name: Run tests and generate coverage report
        run: |
          cd proximity_client  # Change directory to proximity_client
          flutter test --coverage test/

      # Clean coverage report
      - name: Clean coverage report  
        run: |
          cd proximity_client
          lcov --remove coverage/lcov.info '*/test/*' -o coverage/lcov.cleaned.info --ignore-errors unused

      # Upload coverage report to codecov
      - name: Upload coverage report to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.cleaned.info


  build_ios:
    name: Build Flutter (iOS)
    needs: [coverage_flutter_test]  # Ensure this job runs after coverage_flutter_test job
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Use Flutter installed in the previous job
      - name: Use Flutter from coverage_flutter_test job
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.5'

      # Get dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Install Java 17
      - name: Install Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      # Build iOS app
      - name: Build iOS app
        run: flutter build lib/main.dart
